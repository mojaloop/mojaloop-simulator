# Default values for mojaloop-simulator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Usage:
# Add simulators to the simulators object. The following example will create two simulators,
# 'payerfsp' and 'payeefsp' that will be created with the default values available lower in this
# file.
#
# simulators:
#   payerfsp: {}
#   payeefsp: {}
#
# The default values can be overridden for all sims by modifying mojaloop-simulator.defaults in
# your parent chart. They can also be overriden per-simulator. The following example will result in
# a payerfsp without a cache and a payeefsp with a cache.
#
# simulators:
#   payerfsp:
#     config:
#       cache:
#         enabled: false
#   payeefsp: {}

# TODO & notes:
# * do the port _numbers_ matter at all? Can we get rid of them?
# * for Mowali, how are JWS and TLS secrets being set up?
# * support arbitrary init containers + config (that might just be config that goes into defaults
#   or something?). Supply all config and volumes to the init containers.
# * create some test containers
# * parametrise imagePullSecretName (global? like https://github.com/bitnami/charts/tree/master/bitnami/redis#parameters)
# * support shared JWS public keys
# * generate JWS private/public keys
# * support mTLS auto-cert generation
# * probably eliminate all config that shouldn't actually be changed by a user, e.g.
#   JWS_VERIFICATION_KEYS_DIRECTORY. That's a good configuration option to have for other contexts,
#   such as running the sim locally or in docker-compose but in this context it's _an
#   implementation detail_. The chart user should not have to worry about it, and we should not
#   have to test the effect of changing it.
# * make ingress more generic- do not preconfigure annotations
# * think about labels a little more carefully- the app should probably always be "mojaloop-simulator"
# * add config map and hashes to the deployments so that a configmap change triggers a rolling
#   update
# * support JWS public keys for other entities. Add a note in the documentation that they must map
#   directly to the value that will be received in the FSPIOP-Source (check this is correct)
# * update labels to be compliant. E.g. app.kubernetes.io/name or whatever
# * rename ".Values.defaults.config" as it's pretty a useless name
# * support arbitrary sidecars?
# * use the redis subchart? https://github.com/bitnami/charts/tree/master/bitnami/redis
#   - this would mean a single instance of redis (probably good)
#   - might need to have the simulators use separate databases per simulator, or prefix all of
#     their keys with their own name, or something
# * allow the user to optionally specify the namespace, with the caveat that that namespace will
#   need to be created manually before the release is deployed
# * should redis be a statefulset? optionally? what does the bitnami chart do?
# * move labels into helpers
# * autogenerate ILP stuff?
# * defaults.resources looks like it's used nowhere- check this and remove it as appropriate
# * look for references to replicaCount in the charts/values. Is it set, or whatever?
# * scale Redis
# * changing JWS_SIGNING_KEY_PATH currently breaks the chart because it's nastily hard-coded. It
#   should be possible to use the Spring filepath functions to avoid this.
#   (https://masterminds.github.io/sprig/paths.html)

simulators:
  # Every key added to this `simulators` object will be a simulator that takes on the default
  # config below. The default is deliberately left empty so nothing is deployed by default.
  # payerfsp: {}
  # payeefsp: {}

defaultProbes: &defaultProbes
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 3

ingress:
  annotations: {}

defaults: &defaults
  # Changes to this object in the parent chart, for example 'mojaloop-simulator.defaults' will be
  # applied to all simulators deployed by this child chart.
  config:
    imagePullSecretName: dock-casa-secret

    # Scale here is applied to the Deployment containing both the scheme adapter and backend.
    scale:
      enabled: false
      spec:
        minReplicas: 1
        maxReplicas: 10
        metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 80

    cache:
      enabled: true
      image:
        repository: redis
        tag: 5.0.4-alpine
        pullPolicy: Always
      <<: *defaultProbes

    schemeAdapter:
      secrets:
        jws:
          privateKey: ''
          publicKey: ''
      image:
        repository: mojaloop/sdk-scheme-adapter
        tag: v8.6.1
        pullPolicy: Always
      <<: *defaultProbes

      env:
        # This option is presented for consistency with the .env file. However, for the purposes of this chart, this port is _not_ configurable.
        INBOUND_LISTEN_PORT: "4000"

        # This option is presented for consistency with the .env file. However, for the purposes of this chart, this port is _not_ configurable.
        OUTBOUND_LISTEN_PORT: "4001"

        # Enable mutual TLS authentication. Useful when not running in a secure
        # environment, i.e. when you're running it locally against your own implementation.
        MUTUAL_TLS_ENABLED: "false"

        # Enable JWS verification and signing
        VALIDATE_INBOUND_JWS: "false"
        JWS_SIGN: "false"

        # Path to JWS signing key (private key of THIS DFSP)
        JWS_SIGNING_KEY_PATH: "/jwsSigningKey/private.key" # TODO: do not configure- will break the chart
        JWS_VERIFICATION_KEYS_DIRECTORY: "/jwsVerificationKeys"

        # Location of certs and key required for TLS
        IN_CA_CERT_PATH: "./secrets/cacert.pem"
        IN_SERVER_CERT_PATH: "./secrets/servercert.pem"
        IN_SERVER_KEY_PATH: "./secrets/serverkey.pem"

        OUT_CA_CERT_PATH: "./secrets/cacert.pem"
        OUT_CLIENT_CERT_PATH: "./secrets/servercert.pem"
        OUT_CLIENT_KEY_PATH: "./secrets/serverkey.pem"

        # The number of space characters by which to indent pretty-printed logs. If set to zero, log events
        # will each be printed on a single line.
        LOG_INDENT: "0"

        # REDIS CACHE CONNECTION
        # CACHE_HOST: "" # Default is parametrised, but it's possible to override this
        CACHE_PORT: "6379"

        # SWITCH ENDPOINT
        PEER_ENDPOINT: "test-quoting-service:80"

        # BACKEND ENDPOINT
        BACKEND_ENDPOINT: "localhost:3000" # within pod

        # FSPID of this DFSP
        DFSP_ID: "mojaloop-sdk"

        # Secret used for generation and verification of secure ILP
        ILP_SECRET: "Quaixohyaesahju3thivuiChai5cahng"

        # expiry period in seconds for quote and transfers issued by the SDK
        EXPIRY_SECONDS: "60"

        # if set to false the SDK will not automatically accept all returned quotes
        # but will halt the transfer after a quote response is received. A further
        # confirmation call will be required to complete the final transfer stage.
        AUTO_ACCEPT_QUOTES: "false"

        # if set to false the SDK will not automatically accept a resolved party
        # but will halt the transer after a party lookup response is received. A further
        # cnofirmation call will be required to progress the transfer to quotes state.
        AUTO_ACCEPT_PARTY: "false"

        # when set to true, when sending money via the outbound API, the SDK will use the value
        # of FSPIOP-Source header from the received quote response as the payeeFsp value in the
        # transfer prepare request body instead of the value received in the payee party lookup.
        # This behaviour should be enabled when the SDK user DFSP is in a forex enabled switch
        # ecosystem and expects quotes and transfers to be rerouted by the switch to forex
        # entities i.e. forex providing DFSPs. Please see the SDK documentation and switch
        # operator documentation for more information on forex use cases.
        USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP: "false"

        # set to true to validate ILP, otherwise false to ignore ILP
        CHECK_ILP: "true"

        # set to true to enable test features such as request cacheing and retrieval endpoints
        ENABLE_TEST_FEATURES: "true"

        # set to true to mock WSO2 oauth2 token endpoint
        ENABLE_OAUTH_TOKEN_ENDPOINT: "false"
        OAUTH_TOKEN_ENDPOINT_CLIENT_KEY: "test-client-key"
        OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET: "test-client-secret"
        OAUTH_TOKEN_ENDPOINT_LISTEN_PORT: "6000"

        # WS02 Bearer Token specific to golden-fsp instance and environment
        WS02_BEARER_TOKEN: "7718fa9b-be13-3fe7-87f0-a12cf1628168"

        # OAuth2 data used to obtain WSO2 bearer token
        OAUTH_TOKEN_ENDPOINT: ""
        OAUTH_CLIENT_KEY: ""
        OAUTH_CLIENT_SECRET: ""
        OAUTH_REFRESH_SECONDS: "3600"

        # Set to true to respect expirity timestamps
        REJECT_EXPIRED_QUOTE_RESPONSES: "false"
        REJECT_TRANSFERS_ON_EXPIRED_QUOTES: "false"
        REJECT_EXPIRED_TRANSFER_FULFILS: "false"

        INBOUND_MUTUAL_TLS_ENABLED: "false"
        OUTBOUND_MUTUAL_TLS_ENABLED: "false"

    simBackend:
      image:
        repository: mojaloop/mojaloop-simulator
        tag: v8.6.0-snapshot
        pullPolicy: Always
      <<: *defaultProbes

      env:
        ##### Section for simulator backend container #####
        OUTBOUND_ENDPOINT: "http://localhost:4001" # within the pod

        # Enable mutual TLS authentication. Useful when the simulator is not running in a managed
        # environment, i.e. when you're running it locally against your own implementation.
        MUTUAL_TLS_ENABLED: "false"

        # Enable server-only TLS; i.e. serve on HTTPS instead of HTTP.
        HTTPS_ENABLED: "false"

        # Location of certs and key required for TLS
        CA_CERT_PATH: ./secrets/cacert.pem
        SERVER_CERT_PATH: ./secrets/servercert.pem
        SERVER_KEY_PATH: ./secrets/serverkey.pem

        # The number of space characters by which to indent pretty-printed logs. If set to zero, log events
        # will each be printed on a single line.
        LOG_INDENT: "0"

        # The name of the sqlite log file. This probably doesn't matter much to the user, except that
        # setting :memory: will use an in-memory sqlite db, which will be faster and not consume disk
        # space. However, it will also mean that the logs will be lost once the container is stopped.
        SQLITE_LOG_FILE: ./log.sqlite

        # The DFSPID of this simulator. The simulator will accept any requests routed to
        # FSPIOP-Destination: $SCHEME_NAME. Other requests will be rejected.
        SCHEME_NAME: golden
        DFSP_ID: golden

        # The name of the sqlite model database. If you would like to start the simulator with preloaded
        # state you can use a preexisting file. If running in a container, you can mount a sqlite file as a
        # volume in the container to preserve state between runs.
        # Use MODEL_DATABASE: :memory: for an ephemeral in-memory database
        MODEL_DATABASE: ./model.sqlite

        # The simulator can automatically add fees when generating quote responses. Use this
        # variable to control the fee amounts added. e.g. for a transfer of 100 USD a FEE_MULTIPLIER of 0.1
        # reuslts in fees of USD 10 being applied to the quote response
        FEE_MULTIPLIER: "0.05"

        # Specifies the location of a rules file for the simulator backend. Rules can be used to produce
        # specific simulator behaviours in response to incoming requests that match certain conditions.
        # e.g. a rule can be used to trigger NDC errors given transfers between certain limits.
        RULES_FILE: ./rules.json

  ingress:
    enabled: true
    path: /
    hosts:
      - mojaloop-simulators.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}
