openapi: 3.0.1
info:
  title: Mojaloop SDK Inbound Scheme Adapter API
  description: Mojaloop SDK Inbound Scheme Adapter API - To be implemented by DFSP backend
  license:
    name: Open API for FSP Interoperability (FSPIOP)
    url: http://www.majaloop.io
  version: 1.0.0

paths:
  /:
    get:
      summary: Health check endpoint.
      responses:
        200:
          description: Returns empty body if the service is running.
  /participants/{idType}/{idValue}:
    get:
      summary: Asks for the FSPID of the scheme participant that can handle transfers for the specified identifier type and value
      tags:
        - Participants
      parameters:
        - name: idType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/idType'
        - name: idValue
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/idValue'
      responses:
        200:
          description: Response containing details of the requested party
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/participantsResponse'
        404:
          description: The party specified by the provided identifier type and value is not known to the server
        400:
          description: Malformed or missing required headers or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: An error occured processing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /parties/{idType}/{idValue}:
    get:
      summary: Requests information relating to a transfer party identified by the specified identifier type and value
      tags:
        - Parties
      parameters:
        - name: idType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/idType'
        - name: idValue
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/idValue'
      responses:
        200:
          description: Response containing details of the requested party
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferParty'
        404:
          description: The party specified by the provided identifier type and value is not known to the server
        400:
          description: Malformed or missing required headers or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: An error occured processing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /quoterequests:
    post:
      summary: Requests a quote for the specified transfer
      tags:
        - Quotes
      requestBody:
        description: Request for a transfer quotation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quoteRequest'
      responses:
        200:
          description: A response to the transfer quotation request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quoteResponse'
        400:
          description: Malformed or missing required headers or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: An error occured processing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /transactionrequests:
    post:
      summary: transaction request that supports pull based transfers
      tags:
        - TransactionRequest
      requestBody:
        description: Request for Transaction Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transactionRequest'
      responses:
        200:
          description: A response to the transfer transaction request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionRequestResponse'
        400:
          description: Malformed or missing required headers or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: An error occured processing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /transfers:
    post:
      summary: Transfers funds from an external account to an internal account
      tags:
        - Transfers
      requestBody:
        description: An incoming transfer request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferRequest'
      responses:
        200:
          description: The transfer was accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferResponse'
        400:
          description: Malformed or missing required headers or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: An error occured processing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /otp/{requestToPayId}:
    get:
      summary: Requests OTP 
      tags:
        - OTP
      parameters:
        - name: requestToPayId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/idValue'
      responses:
        200:
          description: Response containing details of the OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/otpDetails'
        404:
          description: The party specified by the provided identifier type and value is not known to the server
        400:
          description: Malformed or missing required headers or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: An error occured processing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
                
  /signchallenge:
    post:
      summary: Requests a signed challenge
      tags:
        - Authorizations
      requestBody:
        description: An incoming authorization request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationsPostRequest'
      responses:
        200:
          description: Response containing details of the challenge
        400:
          description: Malformed or missing required headers or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: An error occured processing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /authorizations:
    post:
      tags:
        - Authorizations
      description: The HTTP request `POST /authorizations` is used to request the Payer to enter the applicable credentials in the PISP system.
      summary: /authorizations
      operationId: AuthorizationsPost
      requestBody:
        description: Perform authorization
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationsPostRequest'
      responses:
        200:
          description: 'post accepted'
          content:
            application/json:
              schema:
                type: object
        400:
          description: 'invalid request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: 'internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

components:
  schemas:
  
    quoteRequest:
      type: object
      description: A request for a quote for transfer from the DFSP backend
      required:
        - quoteId
        - transactionId
        - to
        - from
        - amountType
        - amount
        - currency
        - transactionType
        - initiator
        - initiatorType
      properties:
        quoteId:
          $ref: '#/components/schemas/quoteId'
        transactionId:
          $ref: '#/components/schemas/transactionId'
          description: Identifier for the transaction, decided by the Payer FSP during the creation of the quote
        to:
          $ref: '#/components/schemas/transferParty'
          description: Information about the Payee in the proposed financial transaction.
        from:
          $ref: '#/components/schemas/transferParty'
          description: Information about the Payer in the proposed financial transaction.
        amountType:
          $ref: '#/components/schemas/amountType'
          description: 'SEND for send amount, RECEIVE for receive amount.'
        amount:
          $ref: '#/components/schemas/money'
          description: Depending on amountType. If SEND - The amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. The amount is updated by each participating entity in the transaction. If RECEIVE - The amount the Payee should receive, that is, the amount that should be sent to the receiver exclusive any fees. The amount is not updated by any of the participating entities.
        currency:
          $ref: '#/components/schemas/currency'
        feesAmount:
          $ref: '#/components/schemas/money'
          description: The fees in the transaction. The fees element should be empty if fees should be non-disclosed. The fees element should be non-empty if fees should be disclosed.
        feesCurrency:
          $ref: '#/components/schemas/currency'
        transactionType:
          $ref: '#/components/schemas/transactionType'
          description: Type of transaction for which the quote is requested.
        initiator:
          $ref: '#/components/schemas/initiator'
          description: Specifies if the initiator of the transfer is the payer or payee
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
          description: Specifies the type of the transaction initiator
        geoCode:
          $ref: '#/components/schemas/geoCode'
          description: Longitude and Latitude of the initiating Party. Can be used to detect fraud.
        note:
          type: string
          minLength: 1
          maxLength: 128
          description: An optional note associated with the requested transfer
        expiration:
          $ref: '#/components/schemas/timestamp'
          description: An optional deadline for responding to the quote request

    transactionRequest:
      type: object
      description: A request for a pull based transfer
      required:
        - transactionRequestId
        - to
        - from
        - amount
        - currency
        - transactionType
        - initiator
        - initiatorType
      properties:
        transactionRequestId:
          $ref: '#/components/schemas/transactionRequestId'
          description: Identifier for the transaction, decided by the Payer FSP during the creation of the quote
        to:
          $ref: '#/components/schemas/transferParty'
          description: Information about the Payee in the proposed financial transaction.
        from:
          $ref: '#/components/schemas/transferParty'
          description: Information about the Payer in the proposed financial transaction.
        amount:
          $ref: '#/components/schemas/money'
          description: Depending on amountType. If SEND - The amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. The amount is updated by each participating entity in the transaction. If RECEIVE - The amount the Payee should receive, that is, the amount that should be sent to the receiver exclusive any fees. The amount is not updated by any of the participating entities.
        currency:
          $ref: '#/components/schemas/currency'
        transactionType:
          $ref: '#/components/schemas/transactionType'
          description: Type of transaction for which the quote is requested.
        initiator:
          $ref: '#/components/schemas/initiator'
          description: Specifies if the initiator of the transfer is the payer or payee
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
          description: Specifies the type of the transaction initiator
        geoCode:
          $ref: '#/components/schemas/geoCode'
          description: Longitude and Latitude of the initiating Party. Can be used to detect fraud.
        note:
          type: string
          minLength: 1
          maxLength: 128
          description: An optional note associated with the requested transfer
        expiration:
          $ref: '#/components/schemas/timestamp'
          description: An optional deadline for responding to the quote request

    timestamp:
      type: string
      description: An ISO-8601 formatted timestamp
      pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
   
    dateOfBirth:
      type: string
      description: Date of birth in the form YYYY-MM-DD
      pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
 
    initiator:
      type: string
      enum:
        - PAYER
        - PAYEE
        
    initiatorType:
      type: string
      enum:
        - CONSUMER
        - AGENT
        - BUSINESS
        - DEVICE
      
    quoteResponse:
      type: object
      description: A response to a request for a quote
      required:
        - quoteId
        - transactionId
        - transferAmount
        - transferAmountCurrency
      properties:
        quoteId:
          $ref: '#/components/schemas/quoteId'
          description: Id of the quote this response relates to
        transactionId:
          $ref: '#/components/schemas/transactionId'
          description: Identifier for the transaction, decided by the Payer FSP during the creation of the quote
        transferAmount:
          $ref: '#/components/schemas/money'
          description: The amount of money that the Payer FSP should transfer to the Payee FSP
        transferAmountCurrency:
          $ref: '#/components/schemas/currency'
          description: The currency of the transferAmount
        payeeReceiveAmount:  
          $ref: '#/components/schemas/money'
          description: The amount that the Payee should receive in the end-to-end transaction. Optional as the Payee FSP might not want to disclose any optional Payee fees
        payeeReceiveAmountCurrency:
          $ref: '#/components/schemas/currency'
          description: The currency of the payeeReceiveAmount
        payeeFspFeeAmount:
          $ref: '#/components/schemas/money'
          description: Payee FSP’s part of the transaction fee
        payeeFspFeeAmountCurrency:
          $ref: '#/components/schemas/currency'      
          description: The currency of the payeeFspFeeAmount
        payeeFspCommissionAmount:
          $ref: '#/components/schemas/money'
          description: Transaction commission from the Payee FSP
        payeeFspCommissionAmountCurrency:
          $ref: '#/components/schemas/currency'  
          description: Currency of the payeeFspCommissionAmount
        expiration:
          $ref: '#/components/schemas/timestamp'
          description: Timestamp specifying the validity period of the quotation
        geoCode:
          $ref: '#/components/schemas/geoCode'
          description: Longitude and Latitude of the Payee. Can be used to detect fraud
        
    transactionRequestResponse:
      type: object
      description: A response to a request for a quote
      required:
        - transactionId
        - transactionRequestState
      properties:
        transactionId:
          $ref: '#/components/schemas/transactionId'
          description: Identifier for the transaction, decided by the Payer FSP during the creation of the quote
        transferAmount:
          $ref: '#/components/schemas/transactionRequestState'
          description: State of the transaction request.

    participantsResponse:
      type: object
      properties:
        fspId:
          $ref: '#/components/schemas/fspId'
  
    fspId:
      type: string
      minLength: 1
      maxLength: 32
  
    payerType:
      type: string
      enum:
      - CONSUMER
      - AGENT
      - BUSINESS
      - DEVICE
      
    amountType:
      type: string
      enum:
      - SEND
      - RECEIVE
      
    transactionType:
      type: string
      enum:
      - TRANSFER
      - DEPOSIT
      - PAYMENT

    transactionRequestState:
      type: string
      enum:
      - RECEIVED
      - PENDING
      - ACCEPTED
      - REJECTED
      
    transferRequest:
      type: object
      required:
        - transferId
        - currency
        - amount
      properties:
        transferId:
          $ref: '#/components/schemas/transferId'
        quote:
          $ref: '#/components/schemas/quoteResponse'
        from:
          $ref: '#/components/schemas/transferParty'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '#/components/schemas/amountType'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/money'
        transactionType:
          $ref: '#/components/schemas/transactionType'
        note:
          maxLength: 128
          type: string

    otpDetails:
      type: object
      required:
        - otpValue
      properties:
        otpValue:
          type: string
          description: OTP value

    U2FPinValue:
      title: U2FPinValue
      type: object
      description: U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.
      properties:
        pinValue:
          $ref: '#/components/schemas/U2FPIN'
          description: U2F challenge-response.
        counter:
          $ref: '#/components/schemas/Integer'
          description: Sequential counter used for cloning detection. Present only for U2F authentication.
      required:
      - pinValue
      - counter         
    U2FPIN:
      title: U2FPIN
      type: string
      pattern: ^\S{1,64}$
      minLength: 1
      maxLength: 64
      description: U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key. 
    Counter:
      title: Counter
      $ref: '#/components/schemas/Integer'
      description: Sequential counter used for cloning detection. Present only for U2F authentication.
    RetriesLeft:
      title: RetriesLeft
      $ref: '#/components/schemas/Integer' 
      description: RetriesLeft is the number of retries left before the financial transaction is rejected. It must be expressed in the form of the data type Integer. retriesLeft=1 means that this is the last retry before the financial transaction is rejected.
    Integer:
      title: Integer
      type: string
      pattern: '^[1-9]\d*$'
      description: >-
        The API data type Integer is a JSON String consisting of digits only.
        Negative numbers and leading zeroes are not allowed. The data type is
        always limited to a specific number of digits.
    AuthenticationType:
      title: AuthenticationTypeEnum
      type: string
      enum:
        - OTP
        - QRCODE
        - U2F
      description: >-
        Below are the allowed values for the enumeration AuthenticationType. -
        OTP One-time password generated by the Payer FSP. - QRCODE QR code used
        as One Time Password.
    OtpValue:
      title: OtpValue
      type: string
      pattern: '^\d{3,10}$'
      description: >-
        The API data type OtpValue is a JSON String of 3 to 10 characters,
        consisting of digits only. Negative numbers are not allowed. One or more
        leading zeros are allowed.
    QRCODE:
      title: QRCODE
      type: string
      pattern: ^\S{1,64}$
      minLength: 1
      maxLength: 64
      description: QR code used as One Time Password.

    AuthenticationValue:
      title: AuthenticationValue
      oneOf:
        - $ref: '#/components/schemas/OtpValue'
        - $ref: '#/components/schemas/QRCODE'
        - $ref: '#/components/schemas/U2FPinValue'
      description: Contains the authentication value. The format depends on the authentication type used in the AuthenticationInfo complex type.
    Money:
      title: Money
      type: object
      description: Data model for the complex type Money.
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
          description: Currency of the amount.
        amount:
          $ref: '#/components/schemas/Amount'
          description: Amount of Money.
      required:
        - currency
        - amount
    Amount:
      title: Amount
      type: string
      pattern: '^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$'
      description: >-
        The API data type Amount is a JSON String in a canonical format that is
        restricted by a regular expression for interoperability reasons. This
        pattern does not allow any trailing zeroes at all, but allows an amount
        without a minor currency unit. It also only allows four digits in the
        minor currency unit; a negative value is not allowed. Using more than 18
        digits in the major currency unit is not allowed.        
    Currency:
      title: CurrencyEnum
      description: >-
        The currency codes defined in ISO 4217 as three-letter alphabetic codes
        are used as the standard naming representation for currencies.
      type: string
      minLength: 3
      maxLength: 3
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GGP
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - IMP
        - INR
        - IQD
        - IRR
        - ISK
        - JEP
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SPL
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TVD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XDR
        - XOF
        - XPF
        - YER
        - ZAR
        - ZMW
        - ZWD
    CorrelationId:
      title: CorrelationId
      type: string
      pattern: >-
        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      description: >-
        Identifier that correlates all messages of the same sequence. The API
        data type UUID (Universally Unique Identifier) is a JSON String in
        canonical format, conforming to RFC 4122, that is restricted by a
        regular expression for interoperability reasons. An UUID is always 36
        characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).
    DateTime:
      title: DateTime
      type: string
      pattern: >-
        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      description: >-
        The API data type DateTime is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons. The
        format is according to ISO 8601, expressed in a combined date, time and
        time zone format. A more readable version of the format is
        yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples -
        "2016-05-24T08:38:08.699-04:00", "2016-05-24T08:38:08.699Z" (where Z
        indicates Zulu time zone, same as UTC).
    GeoCode:
      title: GeoCode
      type: object
      description: >-
        Data model for the complex type GeoCode. Indicates the geographic
        location from where the transaction was initiated.
      properties:
        latitude:
          $ref: '#/components/schemas/Latitude'
          description: Latitude of the Party.
        longitude:
          $ref: '#/components/schemas/Longitude'
          description: Longitude of the   Party.
      required:
        - latitude
        - longitude
    Latitude:
      title: Latitude
      type: string
      pattern: >-
        ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
      description: >-
        The API data type Latitude is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons.
    Longitude:
      title: Longitude
      type: string
      pattern: >-
        ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
      description: >-
        The API data type Longitude is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons.
    IlpCondition:
      title: IlpCondition
      type: string
      pattern: '^[A-Za-z0-9-_]{43}$'
      maxLength: 48
      description: Condition that must be attached to the transfer by the Payer.
    IlpFulfilment:
      title: IlpFulfilment
      type: string
      pattern: '^[A-Za-z0-9-_]{43}$'
      maxLength: 48
      description: Fulfilment that must be attached to the transfer by the Payee.
    IlpPacket:
      title: IlpPacket
      type: string
      pattern: '^[A-Za-z0-9-_]+[=]{0,2}$'
      minLength: 1
      maxLength: 32768
      description: Information for recipient (transport layer information).
    ExtensionKey:
      title: ExtensionKey
      type: string
      minLength: 1
      maxLength: 32
      description: Extension key.
    ExtensionValue:
      title: ExtensionValue
      type: string
      minLength: 1
      maxLength: 128
      description: Extension value.      
    Extension:
      title: Extension
      type: object
      description: Data model for the complex type Extension
      properties:
        key:
          $ref: '#/components/schemas/ExtensionKey'
          description: Extension key.
        value:
          $ref: '#/components/schemas/ExtensionValue'
          description: Extension value.
      required:
        - key
        - value      
    ExtensionList:
      title: ExtensionList
      type: object
      description: Data model for the complex type ExtensionList
      properties:
        extension:
          type: array
          items:
            $ref: '#/components/schemas/Extension'
          minItems: 1
          maxItems: 16
          description: Number of Extension elements
      required:
        - extension

    QuotesIDPutResponse:
      title: QuotesIDPutResponse
      type: object
      description: 'PUT /quotes/{ID} object'
      properties:
        transferAmount:
          $ref: '#/components/schemas/Money'
          description: >-
            The amount of Money that the Payer FSP should transfer to the Payee
            FSP.
        payeeReceiveAmount:
          $ref: '#/components/schemas/Money'
          description: >-
            The amount of Money that the Payee should receive in the end-to-end
            transaction. Optional as the Payee FSP might not want to disclose
            any optional Payee fees.
        payeeFspFee:
          $ref: '#/components/schemas/Money'
          description: Payee FSP’s part of the transaction fee.
        payeeFspCommission:
          $ref: '#/components/schemas/Money'
          description: Transaction commission from the Payee FSP.
        expiration:
          $ref: '#/components/schemas/DateTime'
          description: >-
            Date and time until when the quotation is valid and can be honored
            when used in the subsequent transaction.
        geoCode:
          $ref: '#/components/schemas/GeoCode'
          description: Longitude and Latitude of the Payee. Can be used to detect fraud.
        ilpPacket:
          $ref: '#/components/schemas/IlpPacket'
          description: The ILP Packet that must be attached to the transfer by the Payer.
        condition:
          $ref: '#/components/schemas/IlpCondition'
          description: The condition that must be attached to the transfer by the Payer.
        extensionList:
          $ref: '#/components/schemas/ExtensionList'
          description: 'Optional extension, specific to deployment.'
      required:
        - transferAmount
        - expiration
        - ilpPacket
        - condition        
    AuthorizationsPostRequest:
      title: AuthorizationsPostRequest
      type: object
      description: POST /authorizations Request object
      properties:
        authenticationType:
          $ref: '#/components/schemas/AuthenticationType'
          description: This value is a valid authentication type from the enumeration AuthenticationType(OTP or QR Code or U2F).
        retriesLeft:
          $ref: '#/components/schemas/RetriesLeft'
          description: RetriesLeft is the number of retries left before the financial transaction is rejected. It must be expressed in the form of the data type Integer. retriesLeft=1 means that this is the last retry before the financial transaction is rejected.
        amount:
          $ref: '#/components/schemas/Money'
          description: This is the transaction amount that will be withdrawn from the Payer’s account.
        transactionId:
          $ref: '#/components/schemas/CorrelationId'
          description: Common ID (decided by the Payer FSP) between the FSPs for the future transaction object. The actual transaction will be created as part of a successful transfer process. 
        transactionRequestId:
          $ref: '#/components/schemas/CorrelationId'
          description: The transactionRequestID, received from the POST /transactionRequests service earlier in the process. 
        quote:
          $ref: '#/components/schemas/QuotesIDPutResponse'
          description: Quotes object
      required:
      - authenticationType
      - retriesLeft
      - amount
      - transactionId
      - transactionRequestId
      - quote          

    transferStatus:
      type: string
      enum:
      - ERROR_OCCURED
      - WAITING_FOR_QUOTE_ACCEPTANCE
      - COMPLETED
      
    idType:
      type: string
      enum:
      - MSISDN
      - ACCOUNT_NO
      - EMAIL
      - PERSONAL_ID
      - BUSINESS
      - DEVICE
      - ACCOUNT_ID
      - IBAN
      - ALIAS
      
    idValue:
      type: string
      minLength: 1
      maxLength: 128
      
    money:
      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
      type: string
      
    transferResponse:
      type: object
      required:
        - homeTransactionId
      properties:
        homeTransactionId:
          type: string
          description: Transaction ID from the DFSP backend, used to reconcile transactions between the switch and DFSP backend systems
          
    currency:
      maxLength: 3
      minLength: 3
      type: string
      
    transferId:
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
      description: A Mojaloop API transfer identifier (UUID)
      
    quoteId:
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
      description: A Mojaloop API quote identifier (UUID)
    
    transactionRequestId:
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
      description: A Mojaloop API transaction request identifier (UUID)
      
    transactionId:
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
      description: ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote
      
    transferParty:
      type: object
      required:
        - idType
        - idValue
      properties:
        type:
          $ref: '#/components/schemas/payerType'
        idType:
          $ref: '#/components/schemas/idType'
        idValue:
          type: string
          description: The identifier string used to identify the sender
        displayName:
          type: string
          description: Display name of the sender if known
        firstName:
          type: string
          description: Party first name
        middleName:
          type: string
          description: Party moddle name
        lastName:
          type: string
          description: Party last name
        dateOfBirth:
          $ref: '#/components/schemas/dateOfBirth'
        merchantClassificationCode:
          type: string
          description: Up to 4 digits specifying the senders merchant classification, if known and applicable
          
    geoCode:
      type: object
      description: Indicates the geographic location from where the transaction was initiated.
      properties:
        latitude:
          $ref: '#/components/schemas/latitude'
        longitude:
          $ref: '#/components/schemas/longitude'
      required:
        - latitude
        - longitude
        
    latitude:
      type: string
      pattern: ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
      description: The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.
    longitude:
      type: string
      pattern: ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
      description: The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.
          
    errorResponse:
      type: object
      properties:
        statusCode:
          type: string
          description: Error code as string
        message:
          type: string
          description: Error message text





